{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/ContactList.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/test/Test.js","components/pages/NotFound.js","App.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","then","config","name","email","phone","className","style","cursor","onClick","float","color","to","pathname","marginRight","marginLeft","ContactList","Fragment","key","Header","branding","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","target","onSubmit","a","preventDefault","newContact","post","history","push","bind","EditContact","updContact","match","params","console","log","put","updateRes","location","About","Test","title","body","fetch","response","json","NotFound","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c107b4dc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onShowClick = (e) => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  onDeleteClick = (id, dispatch) => {\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`, { data: id })\r\n      .then((res) =>\r\n        dispatch({ type: \"DELETE_CONTACT\", payload: res.config.data })\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i style={{ cursor: \"pointer\" }} onClick={this.onShowClick}>\r\n                  ->\r\n                </i>\r\n                <i\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    float: \"right\",\r\n                    color: \"red\",\r\n                  }}\r\n                  onClick={() => this.onDeleteClick(id, dispatch)}\r\n                >\r\n                  x\r\n                </i>\r\n                <Link\r\n                  to={{\r\n                    pathname: `contact/edit/${id}`,\r\n                    state: { id, name, email, phone },\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1em\",\r\n                      marginLeft: \"1em\",\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </p>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    if (this.props.location.state) {\r\n      const { name, email, phone } = await this.props.location.state;\r\n      this.setState({\r\n        name,\r\n        email,\r\n        phone,\r\n      });\r\n    } else {\r\n      const { id } = this.props.match.params;\r\n      const res = await axios.get(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`\r\n      );\r\n      const { name, email, phone } = res.data;\r\n      this.setState({\r\n        name,\r\n        email,\r\n        phone,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    console.log(id);\r\n\r\n    const updateRes = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: updateRes.data });\r\n\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Edit Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ title: data.title, body: data.body }));\r\n  }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport ContactList from \"./components/contacts/ContactList\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport Test from \"./components/pages/test/Test\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={ContactList} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about/\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}